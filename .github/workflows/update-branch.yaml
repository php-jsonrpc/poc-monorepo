name: Update branch
on:
  workflow_call:
    inputs:
      target:
        description: 'Branch name to update with base branch'
        type: string
        required: true
      base:
        description: 'Branch name to merge into target branch'
        type: string
        required: true

defaults:
  run:
    shell: bash

permissions: {}

jobs:
  main:
    name: ${{ inputs.target }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Initialize target branch
        run: |
          git fetch origin ${{ inputs.target }} && exit 0 # Exit early if branch already exists
          git fetch origin ${{ inputs.base }}
          git checkout --track remotes/origin/${{ inputs.base }} -b ${{ inputs.target }}
          git push origin ${{ inputs.target }}
          echo '> ℹ️ Branch `${{ inputs.target }}` created from `origin/${{ inputs.base }}` and synchronized with `origin`' >> $GITHUB_STEP_SUMMARY

      - name: Update target branch
        run: |
          git fetch origin ${{ inputs.target }} --prune -v # Re-fetch target branch to retrieve all refs
          git checkout --track origin/${{ inputs.target }} # Move to target branch
          git branch -D ${{ inputs.base }} || echo "Skipped base branch deletion" # Remove local base branch if it exists (mostly for push events)
          git fetch origin --prune -v # Re-fetch base branch (following potential deletion)
          git checkout --track origin/${{ inputs.base }} # Create base branch (to retrieve right ref)
          git fetch origin ${{ inputs.base }} --prune -v # Re-fetch base branch to retrieve all refs
          git checkout ${{ inputs.target }} # Move back to target branch
          git pull origin ${{ inputs.base }}
          git push origin ${{ inputs.target }}
          echo '✅ Branch `${{ inputs.base }}` merged into `${{ inputs.target }}` and synchronized with `origin`' >> $GITHUB_STEP_SUMMARY
