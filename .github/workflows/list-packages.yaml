name: List packages
on:
  workflow_call:
    inputs:
      state_from:
        description: 'Git base reference used to compute package state'
        type: string
        required: false
        default: 'develop'
      state_from_remote:
        description: 'Git remote related to base reference'
        type: string
        required: false
        default: "originBase"
      state_from_remote_url:
        description: 'Git remote used related to base reference'
        type: string
        required: false
        default: "https://github.com/php-jsonrpc/poc-monorepo.git"
      updated_only:
        description: 'Weither or not to filter out non updated packages (requires `state_from` option !)'
        type: boolean
        required: false
        default: false
    outputs:
      packages:
        description: List of packages
        value: ${{ jobs.main.outputs.packages }}
      updated_packages:
        description: List of updated packages
        value: ${{ jobs.main.outputs.updated_packages }}

permissions: {}

jobs:
  main:
    name: Find${{ inputs.updated_only && ' updated' || '' }} known packages
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.list-generator.outputs.list }}
      updated_packages: ${{ steps.updated-packages-list-generator.outputs.list }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create base git remote
        if: ${{ inputs.state_from }}
        run: |
            git remote add ${{ inputs.state_from_remote }} ${{ inputs.state_from_remote_url }}
            git fetch ${{ inputs.state_from_remote }} ${{ inputs.state_from }} --depth=1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: |
            composer.lock
            vendor
          key: ${{ github.head_ref || github.ref }}-${{ hashFiles('**/composer.json') }}-list-packages-composer

      - name: Install macrorepo
        run: make install

      - name: Compute --state_from CLI option
        if: ${{ inputs.state_from }}
        shell: bash
        run: |
          echo "STATE_FROM_OPTION=--state-from=${{ inputs.state_from_remote }}/${{ inputs.state_from }}" >> $GITHUB_ENV

      - name: Compute --updated-only CLI option
        if: ${{ inputs.updated_only }}
        shell: bash
        run: |
          echo "UPDATED_ONLY_OPTION=--updated-only" >> $GITHUB_ENV

      - name: Generate list
        id: list-generator
        shell: bash
        # Do not run command inside a $(...) clause, else errors won't be caught !
        run: |
          ./vendor/bin/monorepo-builder packages:list $STATE_FROM_OPTION $UPDATED_ONLY_OPTION --with-field=state --with-field=vendor --with-field=short_name --json | \
            tee list.json 
          echo "list=$(cat list.json)" >> $GITHUB_OUTPUT

      - name: Generate updated packages list
        id: updated-packages-list-generator
        shell: bash
        # Do not run command inside a $(...) clause, else errors won't be caught !
        run: |
          echo '${{ steps.list-generator.outputs.list }}' | \
            jq -c -M 'map(select(.state == "updated")) | map(.name)' | \
            tee list.json 
          echo "list=$(cat list.json)" >> $GITHUB_OUTPUT
